// ----------------------------------------------- exercício 01

use('erp');
db.clientes.aggregate([
  {
    $addFields: {
      idade: {
        $floor: {
          $divide: [
            { $subtract: [new Date(), '$dataNascimento'] },
            { $multiply: [86400000, 365] },
          ],
        },
      },
    },
  },
]);


// ----------------------------------------------- exercício 02

use('erp');
db.clientes.aggregate([
  {
    $addFields: {
      idade: {
        $floor: {
          $divide: [
            { $subtract: [new Date(), '$dataNascimento'] },
            { $multiply: [86400000, 365] },
          ],
        },
      },
    },
  },
  {
    $match: {
      idade: { $gte: 18, $lte: 25 },
    },
  },
  {
    $count: "clientes",
  },
]);


// ----------------------------------------------- exercício 03


use('erp');
db.clientes.aggregate([
  {
    $addFields: {
      idade: {
        $floor: {
          $divide: [
            { $subtract: [new Date(), '$dataNascimento'] },
            { $multiply: [86400000, 365] },
          ],
        },
      },
    },
  },
  {
    $lookup: {
      from: 'vendas',
      localField: 'clienteId',
      foreignField: 'clienteId',
      as: 'compras',
    },
  },
]);


// ----------------------------------------------- exercício 04


use('erp');
db.clientes.aggregate([
  {
    $addFields: {
      idade: {
        $floor: {
          $divide: [
            { $subtract: [new Date(), '$dataNascimento'] },
            { $multiply: [86400000, 365] },
          ],
        },
      },
    },
  },
  {
    $lookup: {
      from: 'vendas',
      localField: 'clienteId',
      foreignField: 'clienteId',
      as: 'compras',
    },
  },
  {
    $match: {
      compras: {
        $elemMatch: {
          dataVenda: {
            $gte: ISODate('2019-06-01'),
            $lte: ISODate('2020-03-31'),
          },
        },
      },
    },
  },
]);




// ----------------------------------------------- exercício 05

use('erp');
db.clientes.aggregate([
  {
    $addFields: {
      idade: {
        $floor: {
          $divide: [
            { $subtract: [new Date(), '$dataNascimento'] },
            { $multiply: [86400000, 365] },
          ],
        },
      },
    },
  },
  {
    $lookup: {
      from: 'vendas',
      localField: 'clienteId',
      foreignField: 'clienteId',
      as: 'compras',
    },
  },
  {
    $match: {
      compras: {
        $elemMatch: {
          dataVenda: {
            $gte: ISODate('2019-06-01'),
            $lte: ISODate('2020-03-31'),
          },
        },
      },
    },
  },
]).itcount();


// ----------------------------------------------- exercício 06


use('erp');
db.clientes.aggregate([
  {
    $addFields: {
      idade: {
        $floor: {
          $divide: [
            { $subtract: [new Date(), '$dataNascimento'] },
            { $multiply: [86400000, 365] },
          ],
        },
      },
    },
  },
  {
    $lookup: {
      from: 'vendas',
      localField: 'clienteId',
      foreignField: 'clienteId',
      as: 'compras',
    },
  },
  {
    $match: {
      compras: {
        $elemMatch: {
          dataVenda: {
            $gte: ISODate('2019-06-01'),
            $lte: ISODate('2020-03-31'),
          },
        },
      },
    },
  },
  {
    $addFields: {
      totalCompras: { $size: '$compras' },
    },
  },
  { $sort: { totalCompras: -1 } },
  { $limit: 10 },
]);


// ----------------------------------------------- exercício 07


use('erp');
db.clientes.aggregate([
  {
    $addFields: {
      idade: {
        $floor: {
          $divide: [
            { $subtract: [new Date(), '$dataNascimento'] },
            { $multiply: [86400000, 365] },
          ],
        },
      },
    },
  },
  {
    $lookup: {
      from: 'vendas',
      localField: 'clienteId',
      foreignField: 'clienteId',
      as: 'compras',
    },
  },
  {
    $match: {
      compras: {
        $elemMatch: {
          dataVenda: {
            $gte: ISODate('2019-06-01'),
            $lte: ISODate('2020-03-31'),
          },
        },
      },
    },
  },
  {
    $addFields: {
      totalCompras: { $size: '$compras' },
    },
  },
  { $sort: { totalCompras: -1 } },
  { $limit: 10 },
  { $unwind: '$compras' },
  {
    $addFields: {
      'compras.valorComDesconto': {
        $subtract: [
          '$compras.valorTotal',
          { $multiply: ['$compras.valorTotal', 0.1] },
        ],
      },
    },
  },
]);


// ----------------------------------------------- exercício 08


use('erp');
db.clientes.aggregate([
  {
    $addFields: {
      idade: {
        $floor: {
          $divide: [
            { $subtract: [new Date(), '$dataNascimento'] },
            { $multiply: [86400000, 365] },
          ],
        },
      },
    },
  },
  {
    $lookup: {
      from: 'vendas',
      localField: 'clienteId',
      foreignField: 'clienteId',
      as: 'compras',
    },
  },
  {
    $match: {
      compras: {
        $elemMatch: {
          dataVenda: {
            $gte: ISODate('2019-06-01'),
            $lte: ISODate('2020-03-31'),
          },
        },
      },
    },
  },
  {
    $addFields: {
      totalCompras: { $size: '$compras' },
    },
  },
  { $sort: { totalCompras: -1 } },
  { $limit: 10 },
  { $unwind: '$compras' },
  {
    $addFields: {
      'compras.valorComDesconto': {
        $subtract: [
          '$compras.valorTotal',
          { $multiply: ['$compras.valorTotal', 0.1] },
        ],
      },
    },
  },
  { $group: { _id: '$endereco.uf', qtdCompras: { $sum: 1 } } },
  { $sort: { qtdCompras: -1 } },
  { $limit: 5 },
]);


// ----------------------------------------------- exercício 09


use('erp');
db.vendas.aggregate([
  {
    $match: {
      itens: { $elemMatch: { nome: 'queijo prato' } },
    },
  },
  { $unwind: '$itens' },
  { $match: { 'itens.nome': 'queijo prato' } },
  {
    $group: { _id: '$clienteId', qtdConsumida: { $sum: '$itens.quantidade' } },
  },
  { $sort: { qtdConsumida: -1 } },
  { $limit: 1 },
  {
    $lookup: {
      from: 'clientes',
      localField: '_id',
      foreignField: 'clienteId',
      as: 'cliente',
    },
  },
  { $unwind: '$cliente' },
  {
    $project: {
      nomeCliente: '$cliente.nome',
      uf: '$cliente.enredeco.uf',
      totalConsumido: '$qtdConsumida',
    },
  },
]);


// ----------------------------------------------- exercício 10


use('erp');
db.vendas.aggregate([
  {
    $match: {
      dataVenda: {
        $gte: ISODate('2020-03-01'),
        $lte: ISODate('2020-03-31'),
      },
      status: 'em separacao',
    },
  },
  {
    $addFields: {
      dataEntregaPrevista: {
        $add: ['$dataVenda', 3 * 24 * 60 * 60000],
      },
    },
  },
  {
    $project: {
      clienteId: 1,
      dataVenda: 1,
      dataEntregaPrevista: 1,
      _id: 0,
    },
  },
]);











use("erp");
db.vendas.find(); 
use("erp");
db.produtos.find(); 
use("erp");
db.clientes.find(); 